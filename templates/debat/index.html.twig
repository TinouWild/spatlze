{% extends 'base.html.twig' %}

{% block title %}Article {{ article.title }}{% endblock %}

{% block body %}

    <div class="jumbotron" style="background-image: url('/images/articles/{{ article.imageName }}'); background-size: cover; height: 400px">
        <div class="container">
            <h1 class="text-light">{{ article.title }}</h1>
            <div class="text-light">{{ article.date ? article.date|date('d-m-Y') : '' }}</div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-3">
                <div class="card profile-card-1">
                    <img src="https://images.pexels.com/photos/946351/pexels-photo-946351.jpeg?w=500&h=650&auto=compress&cs=tinysrgb" alt="profile-sample1" class="background"/>
                    <img src="{{ article.author.avatar }}" alt="profile-image" class="profile"/>
                    <div class="card-content">
                        <h2>{{ article.author.pseudo }}
                            <div class="ui buttons small">
                                <button class="ui button">Unfollow</button>
                                <div class="or"></div>
                                <button class="ui positive button">Follow</button>
                            </div>
                        </h2>
                        <div class="icon-block"><a href="#"><i class="fa fa-facebook"></i></a><a href="#"> <i class="fa fa-twitter"></i></a><a href="#"> <i class="fa fa-google-plus"></i></a></div>
                    </div>
                </div>

                <br>

                <div class="paperwrapper mt-5">
                    <div class="paper">
                        <div class="textwrapper">
                            <textarea name="" id="" maxlength="700"></textarea>
                        </div>
                    </div>
                    <style>
                        html,body{
                            height:100%;
                            width:100%;
                            padding:0px;
                            margin:0px;
                            text-align:center;
                        }
                        .bg{
                            display:inline-block;
                            height:400px;
                            max-height:400px;
                            width:10px;
                            background: repeating-linear-gradient(
                                    0deg,
                                    rgba(0,0,255,0.3),
                                    #fff 1px,
                                    #fff 20px
                            );
                        }
                        .paperwrapper{
                            display:inline-block;
                            vertical-align:middle;
                            filter: drop-shadow(1px 1px 4px rgba(0,0,0,0.5));

                        }
                        .paper{
                            height:400px;
                            width:297px;
                            max-height:400px;
                            max-width:297px;
                            position: relative;
                            border-radius:20px;
                            background-color:white;
                            /*box-shadow:1px 1px 12px rgba(0,0,0,0.5);*/
                            margin-left:auto;
                            margin-right:auto;
                            padding-top:40px;
                            padding-bottom:20px;
                            clip-path:polygon(0px 0px, 5px 5px,0px 5px,5px 10px, 10px 25px,2px 50px,8px 80px,0px 123px, 3px 156px, 1px 200px,6px 230px, 0px 300px, 4px 340px, 7px 360px, 0px 460px, 100% 100%, 100% 0%, 0px 0px);

                        }
                        .textwrapper{
                            background: repeating-linear-gradient(
                                    0deg,
                                    rgba(0,0,255,0.3),
                                    #fff 1px,
                                    #fff 20px
                            );
                            height:100%;
                            width:100%;
                            border-bottom: 1px solid rgba(255,0,0,0.3);
                            border-top: 1px solid rgba(255,0,0,0.3);
                        }
                        textarea{
                            height:100%;
                            padding: 0px;
                            margin:0px;
                            margin-left:10px;
                            margin-right:10px;
                            background: transparent;
                            border:none;
                            line-height: 20px;
                            font-size:14px;
                            width:calc(100% - 20px);
                            outline:0;
                            resize:none;
                            font-family: monospace;
                            color:rgba(0,0,0,0.5);
                        }
                        #pagination{
                            position: absolute;
                            bottom:5px;
                            font-size:10px;
                            right:20px;
                        }
                    </style>

                    <a href="#" class="btn btn-outline-success mt-3">Participer au débat</a>
                </div>

                <div class="container"></div>
                <script>
                    "use strict";

                    let _typeof =
                        typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
                            ? function(obj) {
                                return typeof obj;
                            }
                            : function(obj) {
                                return obj && typeof Symbol === "function" && obj.constructor === Symbol
                                    ? "symbol"
                                    : typeof obj;
                            };

                    function Countdown(opt) {
                        "use strict";

                        let options = {
                                cont: null,
                                endDate: {
                                    year: 0,
                                    month: 0,
                                    day: 0,
                                    hour: 0,
                                    minute: 0,
                                    second: 0
                                },
                                endCallback: null,
                                outputFormat: "year|week|day|hour|minute|second",
                                outputTranslation: {
                                    year: "Roky",
                                    week: "Týdny",
                                    day: "Dny",
                                    hour: "Hodin",
                                    minute: "Minut",
                                    second: "Vteřin"
                                }
                            },
                            lastTick = null,
                            intervalsBySize = ["year", "week", "day", "hour", "minute", "second"],
                            TIMESTAMP_SECOND = 200,
                            TIMESTAMP_MINUTE = 60 * TIMESTAMP_SECOND,
                            TIMESTAMP_HOUR = 60 * TIMESTAMP_MINUTE,
                            TIMESTAMP_DAY = 24 * TIMESTAMP_HOUR,
                            TIMESTAMP_WEEK = 7 * TIMESTAMP_DAY,
                            TIMESTAMP_YEAR = 365 * TIMESTAMP_DAY,
                            elementClassPrefix = "countDown_",
                            interval = null,
                            digitConts = {};

                        loadOptions(options, opt);

                        /**
                         * @param date
                         * @returns {Date}
                         */
                        function getDate(date) {
                            if (
                                (typeof date === "undefined" ? "undefined" : _typeof(date)) === "object"
                            ) {
                                if (date instanceof Date) {
                                    return date;
                                } else {
                                    let expectedValues = {
                                        day: 0,
                                        month: 0,
                                        year: 0,
                                        hour: 0,
                                        minute: 0,
                                        second: 0
                                    };

                                    for (let i in expectedValues) {
                                        if (expectedValues.hasOwnProperty(i) && date.hasOwnProperty(i)) {
                                            expectedValues[i] = date[i];
                                        }
                                    }

                                    return new Date(
                                        expectedValues.year,
                                        expectedValues.month > 0
                                            ? expectedValues.month - 1
                                            : expectedValues.month,
                                        expectedValues.day,
                                        expectedValues.hour,
                                        expectedValues.minute,
                                        expectedValues.second
                                    );
                                }
                            } else if (typeof date === "number" || typeof date === "string") {
                                return new Date(date);
                            } else {
                                return new Date();
                            }
                        }

                        /**
                         * @param {Date} dateObj
                         * @return {object}
                         */
                        function prepareTimeByOutputFormat(dateObj) {
                            let usedIntervals = undefined,
                                output = {},
                                timeDiff = undefined;

                            usedIntervals = intervalsBySize.filter(function(item) {
                                return options.outputFormat.split("|").indexOf(item) !== -1;
                            });

                            timeDiff = dateObj.getTime() - Date.now();

                            usedIntervals.forEach(function(item) {
                                let value = undefined;
                                if (timeDiff > 0) {
                                    switch (item) {
                                        case "year":
                                            value = Math.trunc(timeDiff / TIMESTAMP_YEAR);
                                            timeDiff -= value * TIMESTAMP_YEAR;
                                            break;
                                        case "week":
                                            value = Math.trunc(timeDiff / TIMESTAMP_WEEK);
                                            timeDiff -= value * TIMESTAMP_WEEK;
                                            break;
                                        case "day":
                                            value = Math.trunc(timeDiff / TIMESTAMP_DAY);
                                            timeDiff -= value * TIMESTAMP_DAY;
                                            break;
                                        case "hour":
                                            value = Math.trunc(timeDiff / TIMESTAMP_HOUR);
                                            timeDiff -= value * TIMESTAMP_HOUR;
                                            break;
                                        case "minute":
                                            value = Math.trunc(timeDiff / TIMESTAMP_MINUTE);
                                            timeDiff -= value * TIMESTAMP_MINUTE;
                                            break;
                                        case "second":
                                            value = Math.trunc(timeDiff / TIMESTAMP_SECOND);
                                            timeDiff -= value * TIMESTAMP_SECOND;
                                            break;
                                    }
                                } else {
                                    value = "00";
                                }
                                output[item] = (("" + value).length < 2 ? "0" + value : "" + value).split(
                                    ""
                                );
                            });

                            return output;
                        }

                        function fixCompatibility() {
                            Math.trunc =
                                Math.trunc ||
                                function(x) {
                                    if (isNaN(x)) {
                                        return NaN;
                                    }
                                    if (x > 0) {
                                        return Math.floor(x);
                                    }
                                    return Math.ceil(x);
                                };
                        }

                        function writeData(data) {
                            let code = '<div class="' + elementClassPrefix + 'cont">',
                                intervalName = undefined;

                            for (intervalName in data) {
                                if (data.hasOwnProperty(intervalName)) {
                                    let element =
                                        '<div class="' +
                                        elementClassPrefix +
                                        '_interval_basic_cont">\n                                       <div class="' +
                                        getIntervalContCommonClassName() +
                                        " " +
                                        getIntervalContClassName(intervalName) +
                                        '">',
                                        intervalDescription =
                                            '<div class="' +
                                            elementClassPrefix +
                                            'interval_basic_cont_description">\n                                                   ' +
                                            options.outputTranslation[intervalName] +
                                            "\n                                               </div>";
                                    data[intervalName].forEach(function(digit, index) {
                                        element +=
                                            '<div class="' +
                                            getDigitContCommonClassName() +
                                            " " +
                                            getDigitContClassName(index) +
                                            '">\n                                        ' +
                                            getDigitElementString(digit, 0) +
                                            "\n                                    </div>";
                                    });

                                    code += element + "</div>" + intervalDescription + "</div>";
                                }
                            }

                            options.cont.innerHTML = code + "</div>";
                            lastTick = data;
                        }

                        function getDigitElementString(newDigit, lastDigit) {
                            return (
                                '<div class="' +
                                elementClassPrefix +
                                'digit_last_placeholder">\n                        <div class="' +
                                elementClassPrefix +
                                'digit_last_placeholder_inner">\n                            ' +
                                lastDigit +
                                '\n                        </div>\n                    </div>\n                    <div class="' +
                                elementClassPrefix +
                                'digit_new_placeholder">' +
                                newDigit +
                                '</div>\n                    <div class="' +
                                elementClassPrefix +
                                'digit_last_rotate">' +
                                lastDigit +
                                '</div>\n                    <div class="' +
                                elementClassPrefix +
                                'digit_new_rotate">\n                        <div class="' +
                                elementClassPrefix +
                                'digit_new_rotated">\n                            <div class="' +
                                elementClassPrefix +
                                'digit_new_rotated_inner">\n                                ' +
                                newDigit +
                                "\n                            </div>\n                        </div>\n                    </div>"
                            );
                        }

                        function updateView(data) {
                            let _loop = function _loop(intervalName) {
                                if (data.hasOwnProperty(intervalName)) {
                                    data[intervalName].forEach(function(digit, index) {
                                        if (
                                            lastTick !== null &&
                                            lastTick[intervalName][index] !== data[intervalName][index]
                                        ) {
                                            getDigitCont(intervalName, index).innerHTML = getDigitElementString(
                                                data[intervalName][index],
                                                lastTick[intervalName][index]
                                            );
                                        }
                                    });
                                }
                            };

                            for (let intervalName in data) {
                                _loop(intervalName);
                            }

                            lastTick = data;
                        }

                        function getDigitCont(intervalName, index) {
                            if (!digitConts[intervalName + "_" + index]) {
                                digitConts[intervalName + "_" + index] = document.querySelector(
                                    "." +
                                    getIntervalContClassName(intervalName) +
                                    " ." +
                                    getDigitContClassName(index)
                                );
                            }

                            return digitConts[intervalName + "_" + index];
                        }

                        function getIntervalContClassName(intervalName) {
                            return elementClassPrefix + "interval_cont_" + intervalName;
                        }

                        function getIntervalContCommonClassName() {
                            return elementClassPrefix + "interval_cont";
                        }

                        function getDigitContClassName(index) {
                            return elementClassPrefix + "digit_cont_" + index;
                        }

                        function getDigitContCommonClassName() {
                            return elementClassPrefix + "digit_cont";
                        }

                        function loadOptions(_options, _opt) {
                            for (let i in _options) {
                                if (_options.hasOwnProperty(i) && _opt.hasOwnProperty(i)) {
                                    if (
                                        _options[i] !== null &&
                                        _typeof(_options[i]) === "object" &&
                                        _typeof(_opt[i]) === "object"
                                    ) {
                                        loadOptions(_options[i], _opt[i]);
                                    } else {
                                        _options[i] = _opt[i];
                                    }
                                }
                            }
                        }

                        function start() {
                            let endDate = undefined,
                                endDateData = undefined;

                            fixCompatibility();

                            endDate = getDate(options.endDate);

                            endDateData = prepareTimeByOutputFormat(endDate);

                            writeData(endDateData);

                            lastTick = endDateData;

                            if (endDate.getTime() <= Date.now()) {
                                if (typeof options.endCallback === "function") {
                                    options.endCallback();
                                }
                            } else {
                                interval = setInterval(function() {
                                    updateView(prepareTimeByOutputFormat(endDate));
                                }, TIMESTAMP_SECOND);
                            }
                        }

                        function stop() {
                            if (interval !== null) {
                                clearInterval(interval);
                            }
                        }

                        return {
                            start: start,
                            stop: stop
                        };
                    }

                    let cd = new Countdown({
                        cont: document.querySelector(".container"),
                        endDate: 1553468400000,
                        outputTranslation: {
                            year: "Years",
                            week: "Weeks",
                            day: "Days",
                            hour: "Hours",
                            minute: "Minutes",
                            second: "Seconds"
                        },
                        endCallback: null,
                        outputFormat: "week|day|hour|minute|second"
                    });
                    cd.start();

                </script>
                <style>
                    .countDown_cont {
                        font-family: Lato, Arial, Gadget, sans-serif;
                        font-size: 14px;
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        color: #333;
                        display: flex;
                        width: fit-content;
                        margin: 30px auto;
                    }
                    .countDown_interval_cont {
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        -ms-flex-pack: distribute;
                        justify-content: space-around;
                        width: auto;
                    }
                    .countDown_interval_cont:nth-child(n + 1):not(:last-child) {
                        margin-right: 1em;
                    }
                    .countDown_interval_basic_cont {
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        -webkit-box-orient: vertical;
                        -webkit-box-direction: normal;
                        -ms-flex-direction: column;
                        flex-direction: column;
                    }
                    .countDown_interval_basic_cont_description {
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        margin-left: 0.3em;
                        margin-top: 0.3em;
                        font-size: 1.2em;
                        font-weight: bold;
                        color: white;
                        text-shadow: 0.1em 0.1em 0.1em #000000;
                    }
                    .countDown_digit_cont {
                        -webkit-perspective: 3.2em;
                        perspective: 3.2em;
                        box-shadow: 0.1em 0.1em 0.1em rgba(0, 0, 0, 0.2);
                        width: 1em;
                        height: 1.6em;
                        position: relative;
                        line-height: 1.6em;
                        font-size: 5em;
                        font-weight: bold;
                        border-radius: 0.08em;
                    }
                    .countDown_digit_cont:nth-child(n + 1):not(:last-child) {
                        margin-right: 0.05em;
                    }
                    .countDown_digit_last_placeholder,
                    .countDown_digit_new_placeholder {
                        position: absolute;
                        left: 0;
                        width: 100%;
                        height: 50%;
                        text-align: center;
                        overflow: hidden;
                    }
                    .countDown_digit_last_placeholder {
                        bottom: 0;
                        background: white;
                        border-radius: 0 0 0.08em 0.08em;
                    }
                    .countDown_digit_last_placeholder_inner {
                        width: 100%;
                        height: 100%;
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        -webkit-box-pack: center;
                        -ms-flex-pack: center;
                        justify-content: center;
                        -webkit-box-align: center;
                        -ms-flex-align: center;
                        align-items: center;
                        bottom: 50%;
                        position: absolute;
                    }
                    .countDown_digit_new_placeholder {
                        top: 0;
                        background: #f7f7f7;
                        border-radius: 0.08em 0.08em 0 0;
                    }
                    .countDown_digit_last_rotate,
                    .countDown_digit_new_rotate {
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        -webkit-box-pack: center;
                        -ms-flex-pack: center;
                        justify-content: center;
                        width: 100%;
                        height: 50%;
                        font-weight: bold;
                        position: absolute;
                        top: 0;
                        overflow: hidden;
                        -webkit-animation-duration: 0.4s;
                        animation-duration: 0.4s;
                        -webkit-animation-timing-function: linear;
                        animation-timing-function: linear;
                        border-radius: 0.08em 0.08em 0 0;
                        -webkit-animation-fill-mode: forwards;
                        animation-fill-mode: forwards;
                        -webkit-transform-origin: 100% 100%;
                        transform-origin: 100% 100%;
                    }
                    .countDown_digit_last_rotate:after,
                    .countDown_digit_new_rotate:after {
                        content: "";
                        position: absolute;
                        z-index: -1;
                        left: 0;
                        bottom: 0;
                        width: 100%;
                        height: 100%;
                        border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);
                    }
                    .countDown_digit_last_rotate {
                        -webkit-animation-name: countDown_flip_1;
                        animation-name: countDown_flip_1;
                        background: #f7f7f7;
                    }
                    .countDown_digit_new_rotate {
                        -webkit-animation-name: countDown_flip_2;
                        animation-name: countDown_flip_2;
                        background: white;
                    }
                    .countDown_digit_new_rotated {
                        -webkit-transform: rotateX(180deg);
                        transform: rotateX(180deg);
                        width: 100%;
                        height: 100%;
                    }
                    .countDown_digit_new_rotated_inner {
                        width: 100%;
                        height: 100%;
                        display: -webkit-box;
                        display: -ms-flexbox;
                        display: flex;
                        -webkit-box-pack: center;
                        -ms-flex-pack: center;
                        justify-content: center;
                        -webkit-box-align: center;
                        -ms-flex-align: center;
                        align-items: center;
                        bottom: 50%;
                        position: absolute;
                    }
                    @-webkit-keyframes countDown_flip_1 {
                        0% {
                            -webkit-transform: rotateX(0deg);
                            transform: rotateX(0deg);
                            z-index: 1;
                        }
                        100% {
                            -webkit-transform: rotateX(-180deg);
                            transform: rotateX(-180deg);
                            z-index: 0;
                        }
                    }
                    @keyframes countDown_flip_1 {
                        0% {
                            -webkit-transform: rotateX(0deg);
                            transform: rotateX(0deg);
                            z-index: 1;
                        }
                        100% {
                            -webkit-transform: rotateX(-180deg);
                            transform: rotateX(-180deg);
                            z-index: 0;
                        }
                    }
                    @-webkit-keyframes countDown_flip_2 {
                        0% {
                            -webkit-transform: rotateX(0deg);
                            transform: rotateX(0deg);
                            z-index: 0;
                        }
                        100% {
                            -webkit-transform: rotateX(-180deg);
                            transform: rotateX(-180deg);
                            z-index: 1;
                        }
                    }
                    @keyframes countDown_flip_2 {
                        0% {
                            -webkit-transform: rotateX(0deg);
                            transform: rotateX(0deg);
                            z-index: 0;
                        }
                        100% {
                            -webkit-transform: rotateX(-180deg);
                            transform: rotateX(-180deg);
                            z-index: 1;
                        }
                    }
                    body {
                        background: #444;
                    }

                </style>

                <style>
                    .profile-card-1 {
                        font-family: 'Open Sans', Arial, sans-serif;
                        position: relative;
                        float: left;
                        overflow: hidden;
                        width: 100%;
                        color: #ffffff;
                        text-align: center;
                        height:368px;
                        border:none;
                    }
                    .profile-card-1 .background {
                        width:100%;
                        vertical-align: top;
                        opacity: 0.9;
                        -webkit-filter: blur(5px);
                        filter: blur(5px);
                        -webkit-transform: scale(1.8);
                        transform: scale(2.8);
                    }
                    .profile-card-1 .card-content {
                        width: 100%;
                        padding: 15px 25px;
                        position: absolute;
                        left: 0;
                        top: 50%;
                    }
                    .profile-card-1 .profile {
                        border-radius: 50%;
                        position: absolute;
                        bottom: 50%;
                        left: 50%;
                        max-width: 100px;
                        opacity: 1;
                        box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.5);
                        border: 2px solid rgba(255, 255, 255, 1);
                        -webkit-transform: translate(-50%, 0%);
                        transform: translate(-50%, 0%);
                    }
                    .profile-card-1 h2 {
                        margin: 0 0 5px;
                        font-weight: 600;
                        font-size:25px;
                    }
                    .profile-card-1 h2 small {
                        display: block;
                        font-size: 15px;
                        margin-top:10px;
                    }
                    .profile-card-1 i {
                        display: inline-block;
                        font-size: 16px;
                        color: #ffffff;
                        text-align: center;
                        border: 1px solid #fff;
                        width: 30px;
                        height: 30px;
                        line-height: 30px;
                        border-radius: 50%;
                        margin:0 5px;
                    }
                    .profile-card-1 .icon-block{
                        float:left;
                        width:100%;
                        margin-top:15px;
                    }
                    .profile-card-1 .icon-block a{
                        text-decoration:none;
                    }
                    .profile-card-1 i:hover {
                        background-color:#fff;
                        color:#2E3434;
                        text-decoration:none;
                    }
                </style>
            </div>
            <div class="col-9">
                <table class="table">
                    <tbody>
                    <tr>
                        <td>
                            <div class="ui buttons">
                                <button class="ui button">Unfollow</button>
                                <div class="or"></div>
                                <button class="ui positive button">Follow</button>
                            </div>
                        </td>
                        <td><a href="{{ path('articles_show', {'slug' : article.slug}) }}" class="btn btn-outline-dark">Retourner à l'article</a></td>
                        <td>
                            <a href="{{ path('article_like', {'id': article.id}) }}" class="btn btn-link js-like">
                                {% if app.user and article.isLikedByUser(app.user) %}
                                    <i class="fas fa-thumbs-up fa-2x text-warning"></i>
                                {% else %}
                                    <i class="far fa-thumbs-up fa-2x text-warning"></i>
                                {% endif %}
                                <span class="js-likes text-dark">{{ article.likes | length }}</span>
                                <span class="js-label text-dark">J'aime</span>
                            </a>
                        </td>
                    </tr>
                    </tbody>
                </table>

                <hr>

                <div class="container">
                    <div class="row my-5 align-items-center">
                        <div class="col-1"></div>
                        <div class="col-2"><img class="rounded rounded-circle ui small" src="https://randomuser.me/api/portraits/women/41.jpg"></div>
                        <div class="col-2 text-info h1">Isabelle</div>
                        <div class="col-6">May musical arrival beloved luckily adapted him. Shyness mention married son she his started now. Rose if as past near were. To graceful he elegance oh moderate attended entrance pleasure. Vulgar saw fat sudden edward way played either. Thoughts smallest at or peculiar relation breeding produced an. At depart spirit on stairs. She the either are wisdom praise things she before. Be mother itself vanity favour do me of. Begin sex was power joy after had walls miles. </div>
                        <div class="col-1"></div>
                    </div>
                    <div class="row my-2 align-items-center">
                        <div class="col-1"></div>
                        <div class="col-2"></div>
                        <div class="col-2"><img class="rounded rounded-circle ui small" src="https://randomuser.me/api/portraits/men/77.jpg"></div>
                        <div class="col-6">May musical arrival beloved luckily adapted him. Shyness mention married son she his started now. Rose if as past near were. To graceful he elegance oh moderate attended entrance pleasure. Vulgar saw fat sudden edward way played either. Thoughts smallest at or peculiar relation breeding produced an. At depart spirit on stairs. She the either are wisdom praise things she before. Be mother itself vanity favour do me of. Begin sex was power joy after had walls miles. </div>
                        <div class="col-1"></div>
                    </div>
                    <div class="row my-2 align-items-center">
                        <div class="col-1"></div>
                        <div class="col-2"></div>
                        <div class="col-2"><img class="rounded rounded-circle ui small" src="https://randomuser.me/api/portraits/men/10.jpg"></div>
                        <div class="col-6">Rose if as past near were. To graceful he elegance oh moderate attended entrance pleasure. Vulgar saw fat sudden edward way played either. Thoughts smallest at or peculiar relation breeding produced an. At depart spirit on stairs. She the either are wisdom praise things she before. Be mother itself vanity favour do me of. Begin sex was power joy after had walls miles. </div>
                        <div class="col-1"><a href="#"><i class="fas fa-pen fa-2x"></i></a></div>
                    </div>

                    <div class="row my-5 align-items-center">
                        <div class="col-1"></div>
                        <div class="col-2"><img class="rounded rounded-circle ui small" src="https://randomuser.me/api/portraits/women/74.jpg"></div>
                        <div class="col-2 text-info h1">Sylvie</div>
                        <div class="col-6">Shyness mention married son she his started now. Rose if as past near were. To graceful he elegance oh moderate attended entrance pleasure. Vulgar saw fat sudden edward way played either. Thoughts smallest at or peculiar relation breeding produced an. At depart spirit on stairs. She the either are wisdom praise things she before. Be mother itself vanity favour do me of. Begin sex was power joy after had walls miles. </div>
                        <div class="col-1"></div>
                    </div>
                    <div class="row my-2 align-items-center">
                        <div class="col-1"></div>
                        <div class="col-2"></div>
                        <div class="col-2"><img class="rounded rounded-circle ui small" src="{{ article.author.avatar }}"></div>
                        <div class="col-6 text-primary">Rose if as past near were. To graceful he elegance oh moderate attended entrance pleasure. Vulgar saw fat sudden edward way played either. Thoughts smallest at or peculiar relation breeding produced an. At depart spirit on stairs. She the either are wisdom praise things she before. Be mother itself vanity favour do me of. Begin sex was power joy after had walls miles. </div>
                        <div class="col-1"><a href="#"><i class="fas fa-pen fa-2x"></i></a></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>

        function onClickBtnLike(event) {
            event.preventDefault();

            const url = this.href;
            const spanCount = this.querySelector('span.js-likes');
            const icone = this.querySelector('i');

            axios.get(url).then(function(response) {
                spanCount.textContent = response.data.likes;

                if(icone.classList.contains('fas')) {
                    icone.classList.replace('fas', 'far');
                } else {
                    icone.classList.replace('far', 'fas');
                }
            }).catch(function(error) {
                if(error.response.status === 403) {
                    window.alert("Vous ne pouvez pas liker un article si vous n'êtes pas connecté !")
                }
            });
        }

        document.querySelectorAll('a.js-like').forEach(function (link) {
            link.addEventListener('click', onClickBtnLike);
        })
    </script>
{% endblock %}